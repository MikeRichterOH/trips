name: POI-CD
on:
  push:
    branches:
    - main
    - ch5
    paths:
    - apis/poi/**
    - .github/workflows/POI-CD.yml
env:
  registry: openhackh9786t04acr.azurecr.io
  repository: devopsoh/api-poi
  docker_path: apis/poi/web
  webapp_name: openhackh9786t04poi
  resource_group: openhackh9786t04rg
  staging_url_healthcheck: https://openhackh9786t04poi-staging.azurewebsites.net/api/healthcheck/poi
  production_url_healthcheck: https://openhackh9786t04poi.azurewebsites.net/api/healthcheck/poi

jobs:
  docker_build_and_push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Docker login
      run: docker login $registry -u ${{ secrets.ACR_USER }} -p ${{ secrets.ACR_KEY }}
    - name: Docker build
      run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path
    - name: Docker Push
      run: docker push $registry/$repository:${{github.run_number}}
    - uses: nashmaniac/create-issue-action@v1.1
      if: failure()
      name: Create Issue Action
      with:
        title: Build Failed
        token: ${{secrets.GITHUB_TOKEN}}
        assignees: ${{github.actor}}
        labels: workflow-failed
        body: |            
          ${{ github.workflow }} Workflow failed for commit ${{github.sha}}            
          Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  staging_deploy:
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.webapp_name }}
        images: ${{ env.registry }}/${{ env.repository }}:${{github.run_number}}

  production_deploy:
    runs-on: ubuntu-latest
    needs: staging_deploy
    steps:

    - uses: actions/checkout@v2 # needed to get the script
    - name: Run Validation script        
      run: | 
        chmod +x ./.github/build/healthcheck.sh
        ./.github/build/healthcheck.sh -i ${{ env.staging_url_healthcheck }}

    - name: Swap staging to production
      run: |
        az webapp deployment slot swap -n $webapp_name -g $resource_group --slot staging --target-slot production

    - name: Run Production Validation script
      run: |
        chmod +x ./.github/build/healthcheck.sh
        ./.github/build/healthcheck.sh -i ${{ env.production_url_healthcheck }}

    - name: stop staging slot
      run: |
        az webapp stop -g ${{ env.resource_group }} -n ${{ env.webapp_name }} -s staging        
        echo "staging slot stopped"
    - name: display deployments
      if: always()
      run: |      
        echo "Staging Slot Image"
        az webapp show  -g ${{ env.resource_group }} -n ${{ env.webapp_name }} -s staging --query siteConfig.linuxFxVersion
        echo "Production Slot Image"
        az webapp show  -g ${{ env.resource_group }} -n ${{ env.webapp_name }} --query siteConfig.linuxFxVersion